<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2014 Parrot SA

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met:
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the 
      distribution.
    * Neither the name of Parrot nor the names
      of its contributors may be used to endorse or promote products
      derived from this software without specific prior written
      permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
    COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
    OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED 
    AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
    OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
    OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
    SUCH DAMAGE.
-->

<!--
 Important notes :
 ALWAYS ADD NEW THINGS AT THE END OF THE PARENT TAG !
 NEVER MODIFY EXISTING class/command/arg !
 
 Comments are mandatory for all classes/commands/args
 For each comment : 1st line will be used as brief (if applicable)
 Other lines will be used as complete desc
 
 How to add a new class :
 <class name="MyNewClassName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the class                | Inlcuded in Doxygen doc
 <cmd> ... </cmd>                       | List of commands
 <cmd> ... </cmd>
 </class>
 
 How to add a new command (without args) to a class :
 <cmd name="MyNewCommandName" >           | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 </cmd>
 
 How to add a new command (with args) to a class :
 <cmd name="MyNewCommandWithArgs" >       | No spaces ! [A-Za-z0-9_]
 Comment about the command              | Included in Doxygen doc
 <arg name="argName" type="argType" >   | Repeat for each arg
 Comment about the arg                | argName must be a valid C variable name
 </arg>                                 | argType must be a valid type (see below)
 ...                                    | Comment included in Doxygen doc
 </cmd>
 
 List of valid types (associated C type) :
 -  i8 /  u8 : signed/unsigned  8 bit integer ([u]int8_t)
 - i16 / u16 : signed/unsigned 16 bit integer ([u]int16_t)
 - i32 / u32 : signed/unsigned 32 bit integer ([u]int32_t)
 - i64 / u64 : signed/unsigned 64 bit integer ([u]int64_t)
 -     float : IEEE-754 single precision floating point number (float)
 -    double : IEEE-754 double precision floating point number (double)
 -    string : NULL-terminated UTF-8 String. (char *)
 -->


<project name="common_dbg" id="128">
    All debug commands shared between all projects
    
    <class name="Stats" id='2'>
        Commands to make stats
        
        <cmd name="SendPacket" id="0">
            Send a packet to the drone
            <arg name="packet" type="string">
                Packet to send to the drone
            </arg>
        </cmd>
        
        <cmd name="StartSendingPacketFromDrone" id="1">
            Ask drone to start sending packets
            <arg name="frequency" type="u8">
                Frequency of the packet
            </arg>
            
            <arg name="packetSize" type="u8">
                Size of the the packet
            </arg>
            
            <arg name="date" type="u32">
                time of day in sec
            </arg>
        </cmd>
        
        <cmd name="StopSendingPacketFromDrone" id="2">
            Ask drone to stop sending packets
        </cmd>
        
    </class>
    
    <class name="StatsEvent" id="3">
        Stats Event from drone
        
        <cmd name="SendPacket" id="0">
            Send a packet from drone
            <arg name="packet" type="string">
                packet from drone
            </arg>
        </cmd>
        
    </class>

    <class name="DebugSettings" id="4">
        Debug custom commands sent to the drone

        <cmd name="GetAll" id="0">
            Cmd sent by controller to get all settings info (generate "SettingInfo" events).
        </cmd>

        <cmd name="Set" id="1">
            Change setting value.
            Cmd sent by controller to change a writable setting.
            <arg name="id" type="u16">
                Setting Id.
            </arg>
            <arg name="value" type="string">
                New setting value (string encoded).
            </arg>
        </cmd>
    </class>

    <class name="DebugSettingsState" id="5">
        Debug custom commands sent by the drone

        <cmd name="Info"  type="LIST_ITEM" id="0">
                Sent by the drone as answer to GetSettingsInfo
                Describe a debug setting and give the current value.
            <arg name="listFlags" type="u8">
                    List entry attribute Bitfield.
                    0x01: First: indicate it's the first element of the list.
                    0x02: Last:  indicate it's the last element of the list.
                    0x04: Empty: indicate the list is empty (implies First/Last). All other arguments should be ignored.
            </arg>
            <arg name="id" type="u16">
                Setting Id.
            </arg>
            <arg name="label" type="string">
                Setting displayed label (single line).
            </arg>
            <arg name="type" type="enum">
                Setting type.
                <enum name="BOOL">
                    Boolean Setting. (ex: 0, 1)
                </enum>
                <enum name="DECIMAL">
                    Decimal Setting. (ex: -3.5, 0, 2, 3.6, 6.5)
                </enum>
                <enum name="TEXT">
                    Single line text Setting.
                </enum>
            </arg>
            <arg name="mode" type="enum">
                Setting mode.
                <enum name="READ_ONLY">
                    Controller can only read setting.
                </enum>
                <enum name="READ_WRITE">
                    Controller can read and write setting.
                </enum>
            </arg>
            <arg name="range_min" type="string">
                Setting range minimal value for decimal type.
            </arg>
            <arg name="range_max" type="string">
                Setting range max value for decimal type.
            </arg>
            <arg name="range_step" type="string">
                Setting step value for decimal type
            </arg>
            <arg name="value" type="string">
                Current Setting value (string encoded).
            </arg>
        </cmd>

        <cmd name="ListChanged" id="1">
            Setting value changed.
            Cmd sent by drone when setting changed occurred.
            <arg name="id" type="u16">
                Setting Id.
            </arg>
            <arg name="value" type="string">
                New setting value (string encoded).
            </arg>
        </cmd>

    </class>

</project>
